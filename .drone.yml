kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/mickael-kerjean.me/filestash

clone:
  depth: 1


steps:

- name: build_prepare
  image: alpine
  depends_on: [ clone ]
  commands:
  - mkdir -p ./dist/data/
  - cp -R config dist/data/config

- name: build_go
  image: golang:1.11-alpine
  depends_on: [ clone ]
  environment:
    CGO_LDFLAGS_ALLOW: '-fopenmp'
  commands:
  - apk --no-cache add git gcc libc-dev > /dev/null 2>&1
  - mkdir ../plugin/
  - mv server/plugin/plg_* ../plugin
  - go get -t ./server/...
  - go build -ldflags "-X github.com/mickael-kerjean/filestash/server/common.BUILD_NUMBER=`date -u +%Y%m%d`" -o dist/filestash server/main.go

- name: build_js
  image: node:8-alpine
  depends_on: [ clone ]
  commands:
  - npm install > /dev/null 2>&1
  - NODE_ENV=production npm run build

- name: test_prepare
  image: alpine
  depends_on: [ clone ]
  environment:
    PASSWORD:
      from_secret: GIT_PASSWORD
  commands:
  - apk --no-cache add git > /dev/null 2>&1
  - cd ../ && git clone "https://readonly:$PASSWORD@git.kerjean.me/filestash/test.git"
  - chmod -R 777 ./test/
  - chmod -R 777 ./filestash/dist/data

- name: test_go
  image: golang:1.11-alpine
  depends_on: [ test_prepare ]
  commands:
  - apk --no-cache add git gcc libc-dev > /dev/null 2>&1
  - go get -t ../test/unit_go/...
  - go test -v ../test/unit_go/...

- name: test_js
  image: node:8-alpine
  depends_on: [ test_prepare ]
  commands:
  - cd ../test/unit_js
  - npm install > /dev/null 2>&1
  - npm test

- name: test_e2e
  image: machines/puppeteer
  depends_on: [ build_prepare, build_js, build_go ]
  volumes:
  - name: cache
    path: /tmp/
  environment:
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
    ADMIN_PASSWORD: PLKr3FcPUdUNVhNImO6QOSKQ.tkLRniUYWMnV84rlb8Fhvib8C2W
    APP_URL: http://127.0.0.1:8334
    CI: true
  commands:
  - ./dist/filestash &
  - cd ../test/e2e
  - npm install > /dev/null 2>&1
  - node servers/webdav.js &
  - npm test
  - kill -9 %1
  - kill -9 %2

- name: release
  image: plugins/docker
  depends_on: [ build_prepare, build_go, build_js, test_prepare, test_go, test_js ]
  when:
    branch: master
  settings:
    dockerfile: ./docker/prod/Dockerfile
    repo: machines/filestash
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_PASSWORD
    tags: latest

- name: deploy
  image: appleboy/drone-ssh
  depends_on: [ release ]
  when:
    branch: master
  settings:
    command_timeout: 1000
    host: hal.kerjean.me
    user:
      from_secret: SSH_USERNAME
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
    - cd /app/filestash/
    - docker pull machines/filestash:latest
    - docker-compose up -d

- name: report
  image: plugins/irc
  depends_on: [ deploy ]
  settings:
    prefix: build
    nick: blipblip
    channel: filestash
    host: chat.freenode.net
    port: 6667
    template: >
      {{#success build.status}}
        Build success: https://github.com/mickael-kerjean/filestash/commit/{{build.commit}}
      {{else}}
        Build failure: er}} https://github.com/mickael-kerjean/filestash/commit/{{build.commit}}
      {{/success}}

- name: deployement_state
  image: machines/puppeteer
  depends_on: [ deploy ]
  environment:
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
    APP_URL: https://demo.filestash.app
    GITHUB_TOKEN:
      from_secret: GITHUB_TOKEN
    CI: true
  commands:
  - sleep 10
  - cd ../test/e2e
  - npm install > /dev/null 2>&1
  - npm run state
